---
name: pxc-mysql

templates:
  audit_logs.logrotate.erb: config/mysql_clustered_audit_logs.logrotate
  mysql_slow_query_logs.logrotate.erb: config/mysql_slow_query_logs.logrotate
  bpm.yml.erb: config/bpm.yml
  cleanup-socket.sh.erb: bin/cleanup-socket
  client-ca.pem.erb: certificates/client-ca.pem
  client-cert.pem.erb: certificates/client-cert.pem
  client-key.pem.erb: certificates/client-key.pem

  db_init.erb: config/db_init
  disable_mysql_cli_history.sh.erb: config/disable_mysql_cli_history.sh
  pre-stop.erb: bin/pre-stop
  galera-ca.pem.erb: certificates/galera-ca.pem
  galera-cert.pem.erb: certificates/galera-cert.pem
  galera-init-config.yml.erb: config/galera-init-config.yml
  galera-key.pem.erb: certificates/galera-key.pem
  get-sequence-number.sh.erb: bin/get-sequence-number
  my.cnf.erb: config/my.cnf
  mylogin.cnf.erb: config/mylogin.cnf
  pre-start.sh.erb: bin/pre-start
  pxc-sudoers: config/pxc-sudoers
  server-ca.pem.erb: certificates/server-ca.pem
  server-cert.pem.erb: certificates/server-cert.pem
  server-key.pem.erb: certificates/server-key.pem

  mysql57_upgrade: bin/mysql57_upgrade

packages:
- auto-tune-mysql
- galera-init
- jemalloc
- percona-xtradb-cluster-5.7
- percona-xtradb-cluster-8.0
- percona-xtrabackup-2.4
- percona-xtrabackup-8.0
- pxc-utils

consumes:
- name: mysql
  type: mysql
- name: galera-agent
  type: galera-agent
  optional: true
- name: cluster-health-logger
  type: cluster-health-logger
  optional: true

provides:
- name: mysql
  type: mysql
  properties:
  - port
  - pxc_enabled
  - mysql_version
- name: internal-mysql-database
  type: internal-database
- name: mysql-backup-user-creds
  type: mysql-backup-user-creds
  properties:
  - mysql_backup_username
  - mysql_backup_password
  - mysql_socket

properties:

  pxc_enabled:
    description: 'Used for disabling the job. Useful if co-locating the cf-mysql release mysql job and migrating'
    default: true


  # Admin Users
  admin_username:
    description: 'Username for the MySQL server admin user'
    default: 'root'
  admin_password:
    description: 'Required. Password for the MySQL server admin user'
  previous_admin_username:
    description: 'Optional. Previous username of the MySQL server admin user to be removed. Use this when changing the admin_username to avoid leaving around an unused user with root access.'
  remote_admin_access:
    description: 'When set to true, admin and roadmin will be able to connect from any remote host.'
    default: false
  roadmin_enabled:
    description: 'When set to true, a read-only admin user called roadmin is added'
    default: false
  roadmin_password:
    description: 'Required when roadmin_enabled is true. Password for the MySQL server read-only admin user.'


  # Backup User
  mysql_backup_username:
    description: 'Optional. Username for mysql-backup user'
    default: 'mysql-backup'
  mysql_backup_password:
    description: 'Optional. Password for mysql-backup user'

  mysql_socket:
    description: Location of the mysql socket for connecting locally
    default: '/var/vcap/sys/run/pxc-mysql/mysqld.sock'

  cli_history:
    description: 'When set to false, disables cli history on the mysql vms.'
    default: true
  cluster_probe_timeout:
    description: 'The maximum time, in seconds, that a new node will search for an existing cluster.'
    default: 10
  monit_startup_timeout:
    description: 'Number of seconds that monit should wait for mysql to start before giving up'
    default: 60
  port:
    description: 'Port the mysql server should bind to'
    default: 3306
  seeded_databases:
    description: >
      Set of databases to seed. DEPRECATED: Use the seeded_users property with the "schema-admin" role.
    default: {}
    example: |
      - name: db1
        username: user1
        password: pw1
      - name: db2
        username: user2
        password: pw2
  seeded_users:
    description: >
      Set of database users to create
    default: {}
    example: |
      seeded_users:
        admin:
          password: "((mysql_root_password))"
          host: loopback
          role: admin
        monitoring:
          password: "((mysql_monitoring_password))"
          host: any
          role: minimal
        app-user:
          password: "((app_user_password))"
          host: any
          role: schema-admin
          schema: "app-db"
        app-user-with-wildcard-db-access:
          password: "((wildcard_app_user_password))"
          host: any
          role: multi-schema-admin
          schema: "some\_db\_prefix\_%"

  # TLS Config
  tls.galera:
    description: 'Required if engine_config.galera.enabled is true. TLS certificate for galera cluster encryption'

  tls.server:
    description: 'Required. TLS certificate for client-server encryption'

  tls.required:
    description: "Require TLS for all client connections.  This enables the MySQL require_secure_transport option."
    default: false

  tls.client.ca:
    description: |
        Optional. Certificate bundle that defines the set of root certificate authorities that MySQL instances in this
        deployment will use to verify client certificates
  tls.client.certificate:
    description: |
        Optional. Client certificate used when this MySQL instance establishes a connection to another remote MySQL
        instance.
  tls.client.private_key:
    description: |
        Optional. Client private key used when this MySQL instance establishes a connection to another remote MySQL
        instance.

  # Log Config
  engine_config.audit_logs.enabled:
    description: 'Enable audit logging'
    default: false
  engine_config.audit_logs.audit_log_policy:
    description: 'Audit events to log. Valid values are: ALL, LOGINS, QUERIES, NONE'
    default: ALL
  engine_config.audit_logs.audit_log_exclude_accounts:
    default: []
    description: 'Database users to exclude from audit logging'
    example: |
      - monitoring_user
      - other_excluded_user
      - bot_user
  engine_config.audit_logs.audit_log_exclude_accounts_csv:
    description: 'Optional. Additional database users to exclude from audit logging, will be combined with uses specified in engine_config.audit_logs.audit_log_exclude_accounts'
  engine_config.audit_logs.file_rotations:
    description: 'Number of audit file rotations to keep'
    default: 30
  engine_config.audit_logs.rotate_size_in_mb:
    description: 'Size in MB of each audit log file'
    default: 100
  engine_config.log_queries_not_using_indexes:
    description: 'Queries that do not use an index, or that perform a full index scan where the index does not limit the number of rows, will be logged to the slow query log.'
    default: false
  engine_config.long_query_time:
    description: 'Threshold in seconds above which SQL queries get logged in the slow query log file'
    default: 10
  engine_config.log_slow_verbosity:
    description: 'Specifies how much information to include in your slow query log'
    default: 'query_plan,innodb'


  # Mysql Character Set Defaults
  engine_config.character_set_server:
    description: 'Default character set. Note that while the MySQL default is latin1, we default to utf8.'
    default: utf8mb4
  engine_config.collation_server:
    description: 'Default collation. Use SHOW COLLATION to view the valid collations for your character set.'
    default: use_default


  # Binlog Config
  engine_config.binlog.enabled:
    description: 'Enable binlogs across all nodes'
    default: true
  engine_config.binlog.enable_gtid_mode:
    description: >
      Enable gtid-mode / enforce-gtid-consistency for GTID based replication. NOTE: Enabling this option for existing
      clusters can result in inconsistent GTIDs across the cluster.

      For high-availability clusters this property must be explicitly enabled in the manifest and will default to
      false.  When Galera is not enabled (i.e. for a single-node / standalone MySQL), this property defaults to true
      unless explicitly disabled.
  engine_config.binlog.expire_logs_days:
    description: 'Time in days to store binlogs before purging'
    default: 7
  engine_config.binlog.space_limit_percent:
    description: 'Set this to an integer which represents the percentage of disk space to reserve for binary logs. 0 indicates no limit on binary log space.'
    default: 0
  engine_config.binlog.sync:
    description: >
      Advanced configuration variable, consult the documentation before changing.

      sync_binlog=0: Disables synchronization of the binary log to disk by the MySQL server. Instead, the MySQL server relies on the operating system to flush the binary log to disk from time to time as it does for any other file. This setting provides the best performance, but in the event of a power failure or operating system crash, it is possible that the server has committed transactions that have not been synchronized to the binary log.

      sync_binlog=1: Enables synchronization of the binary log to disk before transactions are committed. This is the safest setting but can have a negative impact on performance due to the increased number of disk writes. In the event of a power failure or operating system crash, transactions that are missing from the binary log are only in a prepared state. This permits the automatic recovery routine to roll back the transactions, which guarantees that no transaction is lost from the binary log.
    default: 1


  # InnoDB Config
  engine_config.innodb_buffer_pool_size:
    description: 'Optional. The size in bytes of the memory buffer InnoDB uses to cache data and indexes of its tables'
  engine_config.innodb_buffer_pool_size_percent:
    description: 'Set this to an integer which represents the percentage of system RAM to reserve for the InnoDB buffer pool'
    default: 50
  engine_config.innodb_buffer_pool_instances:
    description: 'Optional. Number of buffer pool instances for InnoDB'
  engine_config.innodb_flush_log_at_trx_commit:
    description: 'Control balance between performance and full ACID compliance. Valid values are: 0, 1, 2'
    default: 1
  engine_config.innodb_flush_method:
    description: 'Advanced configuration variable, consult the documentation before changing. Controls how MySQL opens data files; by default uses fsync(). Set to O_DIRECT if innodb_buffer_pool is sufficiently large that you can use O_DIRECT thus avoiding double-buffering.'
    default: fsync
  engine_config.innodb_large_prefix:
    description: 'Whether innodb_large_prefix is enabled'
    default: true
  engine_config.innodb_lock_wait_timeout:
    description: 'Time in seconds that an InnoDB transaction waits for an InnoDB row lock'
    default: 50
  engine_config.innodb_log_buffer_size:
    description: 'Size in bytes of the buffer for writing log files to disk. Increasing this means larger transactions can run without needing to perform disk I/O before committing.'
    default: 32M
  engine_config.innodb_log_file_size:
    description: 'Size of the ib_log_file used by innodb, in MB'
    default: 1024
  engine_config.innodb_strict_mode:
    description: 'Whether innodb_strict_mode is enabled'
    default: false
  engine_config.innodb_ft_min_token_size:
    description: Minimum length of words that are stored in an InnoDB FULLTEXT index.

  # Generic Config
  engine_config.jemalloc.enabled:
    description: >
        Enable the jemalloc memory allocator.
        See: https://github.com/jemalloc/jemalloc
    default: false
  engine_config.jemalloc.profiling:
    description: >
        Enable jemalloc memory profiling.  Requires engine_config.jemalloc.enabled to be configured.
        See: https://docs.percona.com/percona-server/8.0/jemalloc-profiling.html
    default: false
  engine_config.event_scheduler:
    description: 'Events are named database objects containing SQL statements that are to be executed at a later stage, either once off, or at regular intervals.'
    default: false
  engine_config.local_infile:
    description: 'Allow or disallow clients to access local files'
    default: true
  engine_config.max_allowed_packet:
    description: 'The maximum size in bytes of a packet or a generated/intermediate string'
    default: 256M
  engine_config.max_connections:
    description: 'Maximum total number of database connections for the node'
    default: 5000
  engine_config.max_heap_table_size:
    description: 'The maximum size (in rows) to which user-created MEMORY tables are permitted to grow'
    default: 16777216
  engine_config.read_write_permissions:
    description: "Specify the database server's read/write setting. For single-node deployments, valid options are `read_write`, `read_only`, or `super_read_only`. The setting must be `read_write` for Galera clusters."
    default: read_write
  engine_config.server_id:
    description: 'In leader-follower topology, this value must be unique. In other words, the leader must have a different value than the follower and vice versa. If this is set to 0, then the server refuses any replication connections.'
    default: 0
  engine_config.table_definition_cache:
    description: 'Set this to a number relative to the number of tables the server will manage.'
    default: 8192
  engine_config.table_open_cache:
    description: 'Configure the number of table handles to keep open'
    default: 2000
  engine_config.tmp_table_size:
    description: 'The maximum size (in bytes) of internal in-memory temporary tables'
    default: 33554432
  engine_config.userstat:
    description: 'Enables user statistics, adding several new information schema tables and new FLUSH and SHOW commands.'
    default: false
  engine_config.enable_lower_case_table_names:
    description: Enable or disable the "lower_case_table_names" MySQL server variable via a boolean of true/false.
    default: false
  engine_config.wait_timeout:
    description: The time in seconds that the MySQL server waits for inactive connections before closing them.

  # Galera Config
  engine_config.galera.enabled:
    description: 'Enable this when deploying a galera cluster'
    default: false
  engine_config.galera.cluster_name:
    description: 'A unique name for this cluster. ONLY set before first deployment. DO NOT attempt to change an existing multi-node cluster.'
    default: 'galera-cluster'
  engine_config.galera.gcache_size:
    description: 'Cache size used by galera (maximum amount of data possible in an IST), in MB'
    default: 512
  engine_config.galera.port:
    description: 'Port which Galera Cluster uses for communication across nodes'
    default: 4567
  engine_config.galera.wsrep_log_conflicts:
    description: 'Defines whether the node logs additional information about conflicts. The values that were in conflict are logged, so it is possible for user data to end up in the logs.'
    default: true
  engine_config.galera.wsrep_max_ws_rows:
    description: 'Maximum permitted number of rows per writeset.'
    default: 0
  engine_config.galera.wsrep_max_ws_size:
    description: 'Maximum permitted size in bytes per writeset.'
    default: 1073741824
  engine_config.galera.wsrep_applier_threads:
      description: 'Defines the number of threads to use when applying replicated write-sets.'

  engine_config.additional_raw_entries:
      description: |
        This option allows for adding extra raw configuration entries divided into sections.
        These entries will be appended to the end of each respective section and can potentially overwrite existing configuration settings.
        Use it carefully and at your own risk.
      default: {}
      example:
        mysql:
          connect_timeout: 10
        mysqld:
          early-plugin-load: keyring_file.so
          keyring_file_data: /var/vcap/store/pxc-mysql/keyring

  logging.format.timestamp:
    description: |
      Format for timestamp in component logs. Valid values are 'rfc3339', 'unix-epoch'. 'rfc3339' is the recommended
      format. It will result in all timestamps controlled by this job to be in RFC3339 format, which is human readable.
      This includes stdout, pre-start, and post-start logs. This does not include stderr logs from golang libraries.
      'unix-epoch' will result in all timestamps being in the format they were before the rfc3339 flag was introduced.
      This format is different for different logs. We do not recommend using this flag unless you have scripts that
      expect a particular timestamp format.
    default: "rfc3339"

  mysql_version:
    description: "Version of MySQL to use.  One of '5.7' or '8.0'"
    default: "8.0"

  kernel.vm.swappiness:
    description: "Configure Linux vm.swappiness"
    # https://docs.kernel.org/admin-guide/sysctl/vm.html#swappiness
    # https://www.percona.com/blog/mysql-101-linux-tuning-for-mysql/