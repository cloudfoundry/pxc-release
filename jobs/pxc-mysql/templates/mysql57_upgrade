#!/bin/bash

set -o errexit -o nounset -o pipefail

MYSQL_SOCKET=/var/vcap/sys/run/pxc-mysql/mysqld.sock
PATH=/var/vcap/packages/percona-xtradb-cluster-5.7/bin:${PATH}

needs_upgrade() {
  local datadir_version=/var/vcap/store/pxc-mysql/mysql_upgrade_info

  if [[ ! -f ${datadir_version} ]]; then
    return 0
  fi

  if [[ ${mysqld_version} != "$(<"${datadir_version}")" ]]; then
    return 0
  fi

  return 1
}

start_mysqld_for_upgrade() {
  echo >&2 -n "$(date --rfc-3339=ns || :) Starting MySQL database server for upgrade"
  if ! mysqld \
    --character-set-server=utf8 \
    --collation-server=utf8_unicode_ci \
    --skip-networking \
    --skip-slave-start \
    --wsrep-on=off \
    --wsrep-provider=none \
    --daemonize; then
    echo >&2 " [FAILED]"
    return 1
  fi
  echo >&2 " [OK]"
}

wait_for_mysqld() {
  echo >&2 -n "$(date --rfc-3339=ns || :) Waiting for mysqld to accept connections."
  until [[ -S ${MYSQL_SOCKET} ]]; do
    if ! pidof mysqld >/dev/null; then
      echo >&2 " [FAILED]"
      echo >&2 "$(date --rfc-3339=ns || :) mysqld no longer running.  Exiting."
      return 1
    fi
    echo >&2 -n "."
    sleep 1
  done
  echo >&2 " [OK]"
}

upgrade_mysqld() {
  echo >&2 "$(date --rfc-3339=ns || :) Upgrading MySQL database server to ${mysqld_version}"
  mysql_upgrade --defaults-file=/var/vcap/jobs/pxc-mysql/config/mylogin.cnf --force --socket="${MYSQL_SOCKET}" 1>&2
}

shutdown_mysqld() {
  if ! pidof -s mysqld >/dev/null; then
    return 0
  fi

  echo >&2 -n "$(date --rfc-3339=ns || :) Shutting down mysqld"

  local mysqld_pid
  mysqld_pid=$(pidof -s mysqld)

  kill -TERM "${mysqld_pid}"

  until ! pidof mysqld >/dev/null; do
    echo >&2 -n "."
    sleep 1
  done
  echo >&2 " [OK]"
}

main() {
  mysqld_version=$(mysqld --version | awk '{print $3}')

  if [[ ${mysqld_version} != 5[.]7* ]];then
    echo >&2 "This script should only be run for mysql 5.7 instances, but detected mysql version = ${mysqld_version}"
    return 1
  fi

  if pidof mysqld >/dev/null; then
    echo >&2 "mysqld already running. upgraded aborted."
    return 1
  fi

  if ! needs_upgrade; then
    echo >&2 "No upgraded needed."
    return 0
  fi

  start_mysqld_for_upgrade
  wait_for_mysqld
  set +e
  upgrade_mysqld
  rc=$?
  set -e
  shutdown_mysqld

  return "${rc}"
}

main
