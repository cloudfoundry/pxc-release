<%-
  base_folder = '/var/vcap/sys/run/pxc-mysql'
  instance_addresses = link('mysql').instances.map { |instance| instance.address }

  class AdditionalEntries
    def initialize(entries)
      @entries = entries || {}
    end

    def extract_section(section)
      return {} unless @entries.key?(section)
      section_entries = @entries[section]
      @entries.delete(section)
      section_entries
    end

    def available_sections
      @entries.keys
    end
  end
  additional_entries = AdditionalEntries.new(p('engine_config.additional_raw_entries'))

  def csv_excluded_audit_users
    if_p('engine_config.audit_logs.audit_log_exclude_accounts_csv') do |user_csv|
      return user_csv.split(',')
    end.else do
      return []
    end
  end

  def excluded_audit_users
    users = p('engine_config.audit_logs.audit_log_exclude_accounts') + csv_excluded_audit_users
    ["'galera-agent'@'localhost'", "'cluster-health-logger'@'localhost'"] + users.collect {|user| "'#{user}'@'%'"}
  end

  def bool_to_on_off(boolean)
    return "ON" if boolean
    "OFF"
  end

  if_p('engine_config.innodb_flush_method') do |innodb_flush_method|
    if innodb_flush_method != 'O_DIRECT' && innodb_flush_method != 'fsync'
        raise "Only innodb_flush_method=O_DIRECT or fsync or unset are supported!"
    end
  end
-%>
[<%= section = 'client' %>]
port                            = <%= p('port') %>
socket                          = <%= "#{base_folder}/mysqld.sock" %>

!include                        /var/vcap/jobs/pxc-mysql/config/auto-tune.cnf

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysqld-8.0' %>]
authentication-policy           = mysql_native_password
mysqlx_socket                   = <%= "#{base_folder}/mysqlx.sock" %>
log_replica_updates             = ON
binlog_expire_logs_seconds      = <%= p('engine_config.binlog.expire_logs_days')*24*60*60 %>
source_verify_checksum          = ON
<%- if p('engine_config.galera.enabled') -%>
<%- if_p("engine_config.galera.wsrep_applier_threads") do |wsrep_applier_threads| -%>
wsrep_applier_threads           = <%= wsrep_applier_threads %>
<%- end -%>
wsrep_provider                  = /var/vcap/packages/percona-xtradb-cluster-8.0/lib/libgalera_smm.so
<%- end -%>
log-error-suppression-list      = ER_SERVER_WARN_DEPRECATED
<%- if p('engine_config.jemalloc.enabled') && p('engine_config.jemalloc.profiling') -%>
jemalloc-profiling              = ON
<%- end -%>

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysqld-5.7' %>]
<%- if p('engine_config.galera.enabled') -%>
wsrep_sst_auth                  = <%= p('admin_username')%>:<%= p('admin_password') %>
<%- if_p("engine_config.galera.wsrep_applier_threads") do |wsrep_applier_threads| -%>
wsrep_slave_threads             = <%= wsrep_applier_threads %>
<%- end -%>
wsrep_provider                  = /var/vcap/packages/percona-xtradb-cluster-5.7/lib/libgalera_smm.so
<%- end -%>
log_slave_updates               = ON
expire_logs_days                = <%= p('engine_config.binlog.expire_logs_days') %>
master_verify_checksum          = ON
symbolic-links                  = OFF

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysqld' %>]
character_set_server            = <%= p('engine_config.character_set_server') %>
<%- if p('engine_config.collation_server') != 'use_default' -%>
collation_server                = <%= p('engine_config.collation_server') %>
<%- end -%>
server-id                       = <%= p('engine_config.server_id') %>
<%- if_p('tls.client.ca') do -%>
ssl-ca=/var/vcap/jobs/pxc-mysql/certificates/client-ca.pem
<%- end -%>
ssl-cert=/var/vcap/jobs/pxc-mysql/certificates/server-cert.pem
ssl-key=/var/vcap/jobs/pxc-mysql/certificates/server-key.pem
<%- if p('tls.required') -%>
require-secure-transport        = ON
<%- end -%>

<%- if p('engine_config.galera.enabled') -%>
# GALERA options:
pxc-strict-mode                 = MASTER
pxc_maint_transition_period     = 0
wsrep_cluster_address           = gcomm://<%= instance_addresses.join(",") %>
wsrep_cluster_name              = <%= p('engine_config.galera.cluster_name') %>
wsrep_load_data_splitting       = ON
wsrep_log_conflicts             = <%= bool_to_on_off(p('engine_config.galera.wsrep_log_conflicts')) %>
wsrep_max_ws_rows               = <%= p('engine_config.galera.wsrep_max_ws_rows') %>
wsrep_max_ws_size               = <%= p('engine_config.galera.wsrep_max_ws_size') %>
wsrep_node_address              = <%= spec.ip %>:<%= p('engine_config.galera.port') %>
wsrep_node_name                 = <%= name %>/<%= index %>
wsrep_on                        = ON
wsrep_provider_options          = "gcache.size=<%= p('engine_config.galera.gcache_size') %>M;pc.recovery=FALSE;pc.checksum=TRUE;socket.ssl=yes;socket.ssl_ca=/var/vcap/jobs/pxc-mysql/certificates/galera-ca.pem;socket.ssl_cert=/var/vcap/jobs/pxc-mysql/certificates/galera-cert.pem;socket.ssl_key=/var/vcap/jobs/pxc-mysql/certificates/galera-key.pem;socket.ssl_cipher=ECDHE-RSA-AES256-GCM-SHA384"
wsrep_replicate_myisam          = OFF
wsrep_sst_method                = xtrabackup-v2
pxc-encrypt-cluster-traffic     = OFF
<%- end -%>

<%- case p('engine_config.read_write_permissions') -%>
<% when 'super_read_only' %>super-read-only = ON
<% when 'read_only' %>read-only = ON
<%- end -%>

<%- if p('engine_config.binlog.enable_gtid_mode', !p('engine_config.galera.enabled')) -%>
gtid_mode = ON
enforce_gtid_consistency = ON
<%- end -%>

# Regular MYSQL options:
lower_case_table_names          = <%= p('engine_config.enable_lower_case_table_names') ? 1 : 0 %>
user                            = vcap
socket                          = <%= "#{base_folder}/mysqld.sock" %>
port                            = <%= p('port') %>
datadir                         = /var/vcap/store/pxc-mysql
tmpdir                          = /var/vcap/data/pxc-mysql/tmp
pid-file                        = /var/vcap/store/pxc-mysql/mysql.pid
log_error                       = /var/vcap/sys/log/pxc-mysql/mysql.err.log
init_file                       = /var/vcap/jobs/pxc-mysql/config/db_init
skip_external_locking           = TRUE
secure_file_priv                = /var/vcap/data/pxc-mysql/files
table_definition_cache          = <%= p('engine_config.table_definition_cache') %>
table_open_cache                = <%= p('engine_config.table_open_cache') %>
max_allowed_packet              = <%= p('engine_config.max_allowed_packet') %>
skip_name_resolve               = ON
local_infile                    = <%= bool_to_on_off(p('engine_config.local_infile')) %>

<%- if p('engine_config.binlog.enabled') -%>
log_bin                         = mysql-bin
sync_binlog                     = <%= p('engine_config.binlog.sync') %>
<%- else -%>
skip-log-bin
<%- end -%>
relay_log                       = mysql-relay
relay_log_recovery              = OFF

<%- if_p("engine_config.wait_timeout") do |timeout| -%>
wait-timeout = <%= timeout %>
<% end %>
<% if_p("engine_config.innodb_ft_min_token_size") do |token_size| %>
innodb_ft_min_token_size = <%= token_size %>
<% end %>
# Required for user to create triggers when binlog is enabled
log_bin_trust_function_creators = 1

# Slow query logging:
slow_query_log                  = 1
slow_query_log_file             = /var/vcap/sys/log/pxc-mysql/mysql_slow_query
long_query_time                 = <%= p('engine_config.long_query_time') %>
log_queries_not_using_indexes   = <%= bool_to_on_off(p('engine_config.log_queries_not_using_indexes')) %>
log_slow_verbosity              = <%= p('engine_config.log_slow_verbosity') %>

# User statistics
userstat                        = <%= bool_to_on_off(p('engine_config.userstat')) %>

max_heap_table_size             = <%= p('engine_config.max_heap_table_size') %>
tmp_table_size                  = <%= p('engine_config.tmp_table_size') %>

# These are mandatory MySQL settings for Galera to work
binlog_format                   = ROW
default_storage_engine          = InnoDB
innodb_autoinc_lock_mode        = 2
<%-# Due to auto-tuning of innodb_buffer_pool configs, we only re-configure them here if the operator has an explicit value -%>
<%- if_p('engine_config.innodb_buffer_pool_instances') do |innodb_buffer_pool_instances| -%>
innodb_buffer_pool_instances    = <%= innodb_buffer_pool_instances %>
<%- end -%>
<%- if_p('engine_config.innodb_buffer_pool_size') do |innodb_buffer_pool_size| -%>
innodb_buffer_pool_size         = <%= innodb_buffer_pool_size %>
<%- end -%>
innodb_doublewrite              = ON
innodb_file_per_table           = ON
innodb_flush_log_at_trx_commit  = <%= p('engine_config.innodb_flush_log_at_trx_commit') %>
innodb_flush_method             = <%= p('engine_config.innodb_flush_method') %>
innodb_lock_wait_timeout        = <%= p('engine_config.innodb_lock_wait_timeout') %>
innodb_log_buffer_size          = <%= p('engine_config.innodb_log_buffer_size') %>
innodb_log_file_size            = <%= p('engine_config.innodb_log_file_size')%>MB
# These are required to make the quota enforcer work
innodb_stats_on_metadata        = ON
innodb_stats_persistent         = OFF
innodb_strict_mode              = <%= bool_to_on_off(p('engine_config.innodb_strict_mode')) %>

max_connections                 = <%= p('engine_config.max_connections') %>

# Event Scheduler
event_scheduler                 = <%= bool_to_on_off(p('engine_config.event_scheduler')) %>

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysqld_plugin' %>]
<%- if p('engine_config.audit_logs.enabled') -%>
plugin-load                     = audit_log=audit_log.so
audit_log_file                  = /var/vcap/store/mysql_audit_logs/mysql_server_audit.log
audit_log_format                = JSON
audit_log_exclude_accounts      = "<%= excluded_audit_users.join(',') %>"
audit_log_rotations             = 1
audit_log_rotate_on_size        = <%= p('engine_config.audit_logs.rotate_size_in_mb') %>MB
audit_log_policy                = <%= p('engine_config.audit_logs.audit_log_policy') %>
<%- end -%>

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'sst' %>]
encrypt=4
ssl-ca=/var/vcap/jobs/pxc-mysql/certificates/galera-ca.pem
ssl-cert=/var/vcap/jobs/pxc-mysql/certificates/galera-cert.pem
ssl-key=/var/vcap/jobs/pxc-mysql/certificates/galera-key.pem
sockopt="cipher=ECDHE-RSA-AES256-GCM-SHA384"

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysqldump' %>]
max_allowed_packet              = <%= p('engine_config.max_allowed_packet') %>

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

[<%= section = 'mysql' %>]
max_allowed_packet              = <%= p('engine_config.max_allowed_packet') %>

<%- additional_entries.extract_section(section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>

<%- additional_entries.available_sections.each do |new_section| %>
[<%= new_section %>]
<%- additional_entries.extract_section(new_section).each do |key, value| -%>
<%= key %> = <%= value %>
<%- end -%>
<%- end -%>